InstallFatalErrorHandler(LLVMFatalErrorHandler)[]
ResetFatalErrorHandler[]
EnablePrettyStackTrace[]
InitializeAMDGPUTargetInfo[]
InitializeAMDGPUTarget[]
InitializeAMDGPUTargetMC[]
InitializeAMDGPUAsmPrinter[]
InitializeAMDGPUAsmParser[]
InitializeSystemZTargetInfo[]
InitializeSystemZTarget[]
InitializeSystemZTargetMC[]
InitializeSystemZAsmPrinter[]
InitializeSystemZAsmParser[]
InitializeSystemZDisassembler[]
InitializeHexagonTargetInfo[]
InitializeHexagonTarget[]
InitializeHexagonTargetMC[]
InitializeHexagonAsmPrinter[]
InitializeHexagonDisassembler[]
InitializeNVPTXTargetInfo[]
InitializeNVPTXTarget[]
InitializeNVPTXTargetMC[]
InitializeNVPTXAsmPrinter[]
InitializeMSP430TargetInfo[]
InitializeMSP430Target[]
InitializeMSP430TargetMC[]
InitializeMSP430AsmPrinter[]
InitializeXCoreTargetInfo[]
InitializeXCoreTarget[]
InitializeXCoreTargetMC[]
InitializeXCoreAsmPrinter[]
InitializeXCoreDisassembler[]
InitializeMipsTargetInfo[]
InitializeMipsTarget[]
InitializeMipsTargetMC[]
InitializeMipsAsmPrinter[]
InitializeMipsAsmParser[]
InitializeMipsDisassembler[]
InitializeAArch64TargetInfo[]
InitializeAArch64Target[]
InitializeAArch64TargetMC[]
InitializeAArch64AsmPrinter[]
InitializeAArch64AsmParser[]
InitializeAArch64Disassembler[]
InitializeARMTargetInfo[]
InitializeARMTarget[]
InitializeARMTargetMC[]
InitializeARMAsmPrinter[]
InitializeARMAsmParser[]
InitializeARMDisassembler[]
InitializePowerPCTargetInfo[]
InitializePowerPCTarget[]
InitializePowerPCTargetMC[]
InitializePowerPCAsmPrinter[]
InitializePowerPCAsmParser[]
InitializePowerPCDisassembler[]
InitializeSparcTargetInfo[]
InitializeSparcTarget[]
InitializeSparcTargetMC[]
InitializeSparcAsmPrinter[]
InitializeSparcAsmParser[]
InitializeSparcDisassembler[]
InitializeX86TargetInfo[]
InitializeX86Target[]
InitializeX86TargetMC[]
InitializeX86AsmPrinter[]
InitializeX86AsmParser[]
InitializeX86Disassembler[]
InitializeBPFTargetInfo[]
InitializeBPFTarget[]
InitializeBPFTargetMC[]
InitializeBPFAsmPrinter[]
InitializeBPFDisassembler[]
InitializeLanaiTargetInfo[]
InitializeLanaiTarget[]
InitializeLanaiTargetMC[]
InitializeLanaiAsmPrinter[]
InitializeLanaiAsmParser[]
InitializeLanaiDisassembler[]
InitializeRISCVTargetInfo[]
InitializeRISCVTarget[]
InitializeRISCVTargetMC[]
InitializeWebAssemblyTargetInfo[]
InitializeWebAssemblyTarget[]
InitializeWebAssemblyTargetMC[]
InitializeWebAssemblyAsmPrinter[]
InitializeWebAssemblyAsmParser[]
InitializeWebAssemblyDisassembler[]
GetModuleDataLayout(LLVMModuleRef)[LLVMTargetDataRef]
SetModuleDataLayout(LLVMModuleRef)(LLVMTargetDataRef)[]
CreateTargetData(*const i8)[LLVMTargetDataRef]
AddTargetLibraryInfo(LLVMTargetLibraryInfoRef)(LLVMPassManagerRef)[]
CopyStringRepOfTargetData(LLVMTargetDataRef)[*mut i8]
ByteOrder(LLVMTargetDataRef)[LLVMByteOrdering]
PointerSize(LLVMTargetDataRef)[u32]
PointerSizeForAS(LLVMTargetDataRef)(u32)[u32]
IntPtrType(LLVMTargetDataRef)[LLVMTypeRef]
IntPtrTypeForAS(LLVMTargetDataRef)(u32)[LLVMTypeRef]
IntPtrTypeInContext(LLVMContextRef)(LLVMTargetDataRef)[LLVMTypeRef]
IntPtrTypeForASInContext(LLVMContextRef)(LLVMTargetDataRef)(u32)[LLVMTypeRef]
SizeOfTypeInBits(LLVMTargetDataRef)(LLVMTypeRef)[::libc::c_ulonglong]
StoreSizeOfType(LLVMTargetDataRef)(LLVMTypeRef)[::libc::c_ulonglong]
ABISizeOfType(LLVMTargetDataRef)(LLVMTypeRef)[::libc::c_ulonglong]
ABIAlignmentOfType(LLVMTargetDataRef)(LLVMTypeRef)[u32]
CallFrameAlignmentOfType(LLVMTargetDataRef)(LLVMTypeRef)[u32]
PreferredAlignmentOfType(LLVMTargetDataRef)(LLVMTypeRef)[u32]
PreferredAlignmentOfGlobal(LLVMTargetDataRef)(LLVMValueRef)[u32]
ElementAtOffset(LLVMTargetDataRef)(LLVMTypeRef)(::libc::c_ulonglong)[u32]
OffsetOfElement(LLVMTargetDataRef)(LLVMTypeRef)(u32)[::libc::c_ulonglong]
DisposeTargetData(LLVMTargetDataRef)[]
_InitializeAllTargetInfos[]
_InitializeAllTargets[]
_InitializeAllTargetMCs[]
_InitializeAllAsmPrinters[]
_InitializeAllAsmParsers[]
_InitializeAllDisassemblers[]
_InitializeNativeTarget[LLVMBool]
_InitializeNativeAsmParser[LLVMBool]
_InitializeNativeAsmPrinter[LLVMBool]
_InitializeNativeDisassembler[LLVMBool]
GetFirstTarget[LLVMTargetRef]
GetNextTarget(LLVMTargetRef)[LLVMTargetRef]
GetTargetFromName(*const i8)[LLVMTargetRef]
GetTargetFromTriple(*const i8)(*mut LLVMTargetRef)(*mut *mut i8)[LLVMBool]
GetTargetName(LLVMTargetRef)[*const i8]
GetTargetDescription(LLVMTargetRef)[*const i8]
TargetHasJIT(LLVMTargetRef)[LLVMBool]
TargetHasTargetMachine(LLVMTargetRef)[LLVMBool]
TargetHasAsmBackend(LLVMTargetRef)[LLVMBool]
CreateTargetMachine(LLVMTargetRef)(*const i8)(*const i8)(*const i8)(LLVMCodeGenOptLevel)(LLVMRelocMode)(LLVMCodeModel)[LLVMTargetMachineRef]
DisposeTargetMachine(LLVMTargetMachineRef)[]
GetTargetMachineTarget(LLVMTargetMachineRef)[LLVMTargetRef]
GetTargetMachineTriple(LLVMTargetMachineRef)[*mut i8]
GetTargetMachineCPU(LLVMTargetMachineRef)[*mut i8]
GetTargetMachineFeatureString(LLVMTargetMachineRef)[*mut i8]
CreateTargetDataLayout(LLVMTargetMachineRef)[LLVMTargetDataRef]
SetTargetMachineAsmVerbosity(LLVMTargetMachineRef)(LLVMBool)[]
TargetMachineEmitToFile(LLVMTargetMachineRef)(LLVMModuleRef)(*mut i8)(LLVMCodeGenFileType)(*mut *mut i8)[LLVMBool]
TargetMachineEmitToMemoryBuffer(LLVMTargetMachineRef)(LLVMModuleRef)(LLVMCodeGenFileType)(*mut *mut i8)(*mut LLVMMemoryBufferRef)[LLVMBool]
GetDefaultTargetTriple[*mut i8]
NormalizeTargetTriple(*const i8)[*mut i8]
GetHostCPUName[*mut i8]
GetHostCPUFeatures[*mut i8]
AddAnalysisPasses(LLVMTargetMachineRef)(LLVMPassManagerRef)[]
WriteBitcodeToFile(LLVMModuleRef)(*const i8)[::libc::c_int]
WriteBitcodeToFD(LLVMModuleRef)(::libc::c_int)(::libc::c_int)(::libc::c_int)[::libc::c_int]
WriteBitcodeToFileHandle(LLVMModuleRef)(::libc::c_int)[::libc::c_int]
WriteBitcodeToMemoryBuffer(LLVMModuleRef)[LLVMMemoryBufferRef]
LinkInMCJIT[]
LinkInInterpreter[]
CreateGenericValueOfInt(LLVMTypeRef)(::libc::c_ulonglong)(LLVMBool)[LLVMGenericValueRef]
CreateGenericValueOfPointer(*mut ::libc::c_void)[LLVMGenericValueRef]
CreateGenericValueOfFloat(LLVMTypeRef)(::libc::c_double)[LLVMGenericValueRef]
GenericValueIntWidth(LLVMGenericValueRef)[u32]
GenericValueToInt(LLVMGenericValueRef)(LLVMBool)[::libc::c_ulonglong]
GenericValueToPointer(LLVMGenericValueRef)[*mut ::libc::c_void]
GenericValueToFloat(LLVMTypeRef)(LLVMGenericValueRef)[::libc::c_double]
DisposeGenericValue(LLVMGenericValueRef)[]
CreateExecutionEngineForModule(*mut LLVMExecutionEngineRef)(LLVMModuleRef)(*mut *mut i8)[LLVMBool]
CreateInterpreterForModule(*mut LLVMExecutionEngineRef)(LLVMModuleRef)(*mut *mut i8)[LLVMBool]
CreateJITCompilerForModule(*mut LLVMExecutionEngineRef)(LLVMModuleRef)(u32)(*mut *mut i8)[LLVMBool]
InitializeMCJITCompilerOptions(*mut LLVMMCJITCompilerOptions)(usize)[]
CreateMCJITCompilerForModule(*mut LLVMExecutionEngineRef)(LLVMModuleRef)(*mut LLVMMCJITCompilerOptions)(usize)(*mut *mut i8)[LLVMBool]
DisposeExecutionEngine(LLVMExecutionEngineRef)[]
RunStaticConstructors(LLVMExecutionEngineRef)[]
RunStaticDestructors(LLVMExecutionEngineRef)[]
RunFunctionAsMain(LLVMExecutionEngineRef)(LLVMValueRef)(u32)(*const *const i8)(*const *const i8)[::libc::c_int]
RunFunction(LLVMExecutionEngineRef)(LLVMValueRef)(u32)(*mut LLVMGenericValueRef)[LLVMGenericValueRef]
FreeMachineCodeForFunction(LLVMExecutionEngineRef)(LLVMValueRef)[]
AddModule(LLVMExecutionEngineRef)(LLVMModuleRef)[]
RemoveModule(LLVMExecutionEngineRef)(LLVMModuleRef)(*mut LLVMModuleRef)(*mut *mut i8)[LLVMBool]
FindFunction(LLVMExecutionEngineRef)(*const i8)(*mut LLVMValueRef)[LLVMBool]
RecompileAndRelinkFunction(LLVMExecutionEngineRef)(LLVMValueRef)[*mut ::libc::c_void]
GetExecutionEngineTargetData(LLVMExecutionEngineRef)[LLVMTargetDataRef]
GetExecutionEngineTargetMachine(LLVMExecutionEngineRef)[LLVMTargetMachineRef]
AddGlobalMapping(LLVMExecutionEngineRef)(LLVMValueRef)(*mut ::libc::c_void)[]
GetPointerToGlobal(LLVMExecutionEngineRef)(LLVMValueRef)[*mut ::libc::c_void]
GetGlobalValueAddress(LLVMExecutionEngineRef)(*const i8)[u64]
GetFunctionAddress(LLVMExecutionEngineRef)(*const i8)[u64]
ExecutionEngineGetErrMsg(LLVMExecutionEngineRef)(*mut *mut i8)[LLVMBool]
CreateSimpleMCJITMemoryManager(*mut ::libc::c_void)(LLVMMemoryManagerAllocateCodeSectionCallback)(LLVMMemoryManagerAllocateDataSectionCallback)(LLVMMemoryManagerFinalizeMemoryCallback)(LLVMMemoryManagerDestroyCallback)[LLVMMCJITMemoryManagerRef]
DisposeMCJITMemoryManager(LLVMMCJITMemoryManagerRef)[]
CreateGDBRegistrationListener[LLVMJITEventListenerRef]
CreateIntelJITEventListener[LLVMJITEventListenerRef]
CreateOProfileJITEventListener[LLVMJITEventListenerRef]
CreatePerfJITEventListener[LLVMJITEventListenerRef]
DebugMetadataVersion[u32]
GetModuleDebugMetadataVersion(LLVMModuleRef)[u32]
StripModuleDebugInfo(LLVMModuleRef)[LLVMBool]
CreateDIBuilderDisallowUnresolved(LLVMModuleRef)[LLVMDIBuilderRef]
CreateDIBuilder(LLVMModuleRef)[LLVMDIBuilderRef]
DisposeDIBuilder(LLVMDIBuilderRef)[]
DIBuilderFinalize(LLVMDIBuilderRef)[]
DIBuilderCreateCompileUnit(LLVMDIBuilderRef)(LLVMDWARFSourceLanguage)(LLVMMetadataRef)(*const i8)(usize)(LLVMBool)(*const i8)(usize)(u32)(*const i8)(usize)(LLVMDWARFEmissionKind)(u32)(LLVMBool)(LLVMBool)(*const i8)(usize)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateFile(LLVMDIBuilderRef)(*const i8)(usize)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateModule(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(*const i8)(usize)(*const i8)(usize)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateNameSpace(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMBool)[LLVMMetadataRef]
DIBuilderCreateFunction(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(*const i8)(usize)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMBool)(LLVMBool)(u32)(LLVMDIFlags)(LLVMBool)[LLVMMetadataRef]
DIBuilderCreateLexicalBlock(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(u32)(u32)[LLVMMetadataRef]
DIBuilderCreateLexicalBlockFile(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateImportedModuleFromNamespace(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateImportedModuleFromAlias(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateImportedModuleFromModule(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateImportedDeclaration(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(u32)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateDebugLocation(LLVMContextRef)(u32)(u32)(LLVMMetadataRef)(LLVMMetadataRef)[LLVMMetadataRef]
DILocationGetLine(LLVMMetadataRef)[u32]
DILocationGetColumn(LLVMMetadataRef)[u32]
DILocationGetScope(LLVMMetadataRef)[LLVMMetadataRef]
DILocationGetInlinedAt(LLVMMetadataRef)[LLVMMetadataRef]
DIScopeGetFile(LLVMMetadataRef)[LLVMMetadataRef]
DIFileGetDirectory(LLVMMetadataRef)(*mut u32)[*const i8]
DIFileGetFilename(LLVMMetadataRef)(*mut u32)[*const i8]
DIFileGetSource(LLVMMetadataRef)(*mut u32)[*const i8]
DIBuilderGetOrCreateTypeArray(LLVMDIBuilderRef)(*mut LLVMMetadataRef)(usize)[LLVMMetadataRef]
DIBuilderCreateSubroutineType(LLVMDIBuilderRef)(LLVMMetadataRef)(*mut LLVMMetadataRef)(u32)(LLVMDIFlags)[LLVMMetadataRef]
DIBuilderCreateMacro(LLVMDIBuilderRef)(LLVMMetadataRef)(u32)(LLVMDWARFMacinfoRecordType)(*const i8)(usize)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateTempMacroFile(LLVMDIBuilderRef)(LLVMMetadataRef)(u32)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateEnumerator(LLVMDIBuilderRef)(*const i8)(usize)(i64)(LLVMBool)[LLVMMetadataRef]
DIBuilderCreateEnumerationType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u32)(*mut LLVMMetadataRef)(u32)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateUnionType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u32)(LLVMDIFlags)(*mut LLVMMetadataRef)(u32)(u32)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateArrayType(LLVMDIBuilderRef)(u64)(u32)(LLVMMetadataRef)(*mut LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateVectorType(LLVMDIBuilderRef)(u64)(u32)(LLVMMetadataRef)(*mut LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateUnspecifiedType(LLVMDIBuilderRef)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateBasicType(LLVMDIBuilderRef)(*const i8)(usize)(u64)(LLVMDWARFTypeEncoding)(LLVMDIFlags)[LLVMMetadataRef]
DIBuilderCreatePointerType(LLVMDIBuilderRef)(LLVMMetadataRef)(u64)(u32)(u32)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateStructType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u32)(LLVMDIFlags)(LLVMMetadataRef)(*mut LLVMMetadataRef)(u32)(u32)(LLVMMetadataRef)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateMemberType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u32)(u64)(LLVMDIFlags)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateStaticMemberType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMDIFlags)(LLVMValueRef)(u32)[LLVMMetadataRef]
DIBuilderCreateMemberPointerType(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(u64)(u32)(LLVMDIFlags)[LLVMMetadataRef]
DIBuilderCreateObjCIVar(LLVMDIBuilderRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u32)(u64)(LLVMDIFlags)(LLVMMetadataRef)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateObjCProperty(LLVMDIBuilderRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(*const i8)(usize)(*const i8)(usize)(u32)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateObjectPointerType(LLVMDIBuilderRef)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateQualifiedType(LLVMDIBuilderRef)(u32)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateReferenceType(LLVMDIBuilderRef)(u32)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateNullPtrType(LLVMDIBuilderRef)[LLVMMetadataRef]
DIBuilderCreateTypedef(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderCreateInheritance(LLVMDIBuilderRef)(LLVMMetadataRef)(LLVMMetadataRef)(u64)(u32)(LLVMDIFlags)[LLVMMetadataRef]
DIBuilderCreateForwardDecl(LLVMDIBuilderRef)(u32)(*const i8)(usize)(LLVMMetadataRef)(LLVMMetadataRef)(u32)(u32)(u64)(u32)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateReplaceableCompositeType(LLVMDIBuilderRef)(u32)(*const i8)(usize)(LLVMMetadataRef)(LLVMMetadataRef)(u32)(u32)(u64)(u32)(LLVMDIFlags)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateBitFieldMemberType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u64)(u64)(LLVMDIFlags)(LLVMMetadataRef)[LLVMMetadataRef]
DIBuilderCreateClassType(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(u64)(u32)(u64)(LLVMDIFlags)(LLVMMetadataRef)(*mut LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMMetadataRef)(*const i8)(usize)[LLVMMetadataRef]
DIBuilderCreateArtificialType(LLVMDIBuilderRef)(LLVMMetadataRef)[LLVMMetadataRef]
DITypeGetName(LLVMMetadataRef)(*mut usize)[*const i8]
DITypeGetSizeInBits(LLVMMetadataRef)[u64]
DITypeGetOffsetInBits(LLVMMetadataRef)[u64]
DITypeGetAlignInBits(LLVMMetadataRef)[u32]
DITypeGetLine(LLVMMetadataRef)[u32]
DITypeGetFlags(LLVMMetadataRef)[LLVMDIFlags]
DIBuilderGetOrCreateSubrange(LLVMDIBuilderRef)(i64)(i64)[LLVMMetadataRef]
DIBuilderGetOrCreateArray(LLVMDIBuilderRef)(*mut LLVMMetadataRef)(usize)[LLVMMetadataRef]
DIBuilderCreateExpression(LLVMDIBuilderRef)(*mut i64)(usize)[LLVMMetadataRef]
DIBuilderCreateConstantValueExpression(LLVMDIBuilderRef)(i64)[LLVMMetadataRef]
DIBuilderCreateGlobalVariableExpression(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(*const i8)(usize)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMBool)(LLVMMetadataRef)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIGlobalVariableExpressionGetVariable(LLVMMetadataRef)[LLVMMetadataRef]
DIGlobalVariableExpressionGetExpression(LLVMMetadataRef)[LLVMMetadataRef]
DIVariableGetFile(LLVMMetadataRef)[LLVMMetadataRef]
DIVariableGetScope(LLVMMetadataRef)[LLVMMetadataRef]
DIVariableGetLine(LLVMMetadataRef)[u32]
TemporaryMDNode(LLVMContextRef)(*mut LLVMMetadataRef)(usize)[LLVMMetadataRef]
DisposeTemporaryMDNode(LLVMMetadataRef)[]
MetadataReplaceAllUsesWith(LLVMMetadataRef)(LLVMMetadataRef)[]
DIBuilderCreateTempGlobalVariableFwdDecl(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(*const i8)(usize)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMBool)(LLVMMetadataRef)(u32)[LLVMMetadataRef]
DIBuilderInsertDeclareBefore(LLVMDIBuilderRef)(LLVMValueRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMValueRef)[LLVMValueRef]
DIBuilderInsertDeclareAtEnd(LLVMDIBuilderRef)(LLVMValueRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMBasicBlockRef)[LLVMValueRef]
DIBuilderInsertDbgValueBefore(LLVMDIBuilderRef)(LLVMValueRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMValueRef)[LLVMValueRef]
DIBuilderInsertDbgValueAtEnd(LLVMDIBuilderRef)(LLVMValueRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMMetadataRef)(LLVMBasicBlockRef)[LLVMValueRef]
DIBuilderCreateAutoVariable(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMBool)(LLVMDIFlags)(u32)[LLVMMetadataRef]
DIBuilderCreateParameterVariable(LLVMDIBuilderRef)(LLVMMetadataRef)(*const i8)(usize)(u32)(LLVMMetadataRef)(u32)(LLVMMetadataRef)(LLVMBool)(LLVMDIFlags)[LLVMMetadataRef]
GetSubprogram(LLVMValueRef)[LLVMMetadataRef]
SetSubprogram(LLVMValueRef)(LLVMMetadataRef)[]
DISubprogramGetLine(LLVMMetadataRef)[u32]
InstructionGetDebugLoc(LLVMValueRef)[LLVMMetadataRef]
InstructionSetDebugLoc(LLVMValueRef)(LLVMMetadataRef)[]
GetMetadataKind(LLVMMetadataRef)[LLVMMetadataKind]
LoadLibraryPermanently(*const i8)[LLVMBool]
ParseCommandLineOptions(::libc::c_int)(*const *const i8)(*const i8)[]
SearchForAddressOfSymbol(*const i8)[*mut ::libc::c_void]
AddSymbol(*const i8)(*mut ::libc::c_void)[]
ParseIRInContext(LLVMContextRef)(LLVMMemoryBufferRef)(*mut LLVMModuleRef)(*mut *mut i8)[LLVMBool]
AddLowerSwitchPass(LLVMPassManagerRef )[]
AddPromoteMemoryToRegisterPass(LLVMPassManagerRef )[]
InitializeCore(LLVMPassRegistryRef)[]
InitializeTransformUtils(LLVMPassRegistryRef)[]
InitializeScalarOpts(LLVMPassRegistryRef)[]
InitializeObjCARCOpts(LLVMPassRegistryRef)[]
InitializeVectorization(LLVMPassRegistryRef)[]
InitializeInstCombine(LLVMPassRegistryRef)[]
InitializeAggressiveInstCombiner(LLVMPassRegistryRef)[]
InitializeIPO(LLVMPassRegistryRef)[]
InitializeInstrumentation(LLVMPassRegistryRef)[]
InitializeAnalysis(LLVMPassRegistryRef)[]
InitializeIPA(LLVMPassRegistryRef)[]
InitializeCodeGen(LLVMPassRegistryRef)[]
InitializeTarget(LLVMPassRegistryRef)[]
ParseBitcode(LLVMMemoryBufferRef)(*mut LLVMModuleRef)(*mut *mut i8)[LLVMBool]
ParseBitcode2(LLVMMemoryBufferRef)(*mut LLVMModuleRef)[LLVMBool]
ParseBitcodeInContext(LLVMContextRef)(LLVMMemoryBufferRef)(*mut LLVMModuleRef)(*mut *mut i8)[LLVMBool]
ParseBitcodeInContext2(LLVMContextRef)(LLVMMemoryBufferRef)(*mut LLVMModuleRef)[LLVMBool]
GetBitcodeModuleInContext(LLVMContextRef)(LLVMMemoryBufferRef)(*mut LLVMModuleRef)(*mut *mut i8)[LLVMBool]
GetBitcodeModuleInContext2(LLVMContextRef)(LLVMMemoryBufferRef)(*mut LLVMModuleRef)[LLVMBool]
GetBitcodeModule(LLVMMemoryBufferRef)(*mut LLVMModuleRef)(*mut *mut i8)[LLVMBool]
GetBitcodeModule2(LLVMMemoryBufferRef)(*mut LLVMModuleRef)[LLVMBool]
VerifyModule(LLVMModuleRef)(LLVMVerifierFailureAction)(*mut *mut i8)[LLVMBool]
VerifyFunction(LLVMValueRef)(LLVMVerifierFailureAction)[LLVMBool]
ViewFunctionCFG(LLVMValueRef)[]
ViewFunctionCFGOnly(LLVMValueRef)[]
RemarkStringGetData(LLVMRemarkStringRef)[*const i8]
RemarkStringGetLen(LLVMRemarkStringRef)[u32]
RemarkDebugLocGetSourceFilePath(LLVMRemarkDebugLocRef)[LLVMRemarkStringRef]
RemarkDebugLocGetSourceLine(LLVMRemarkDebugLocRef)[u32]
RemarkDebugLocGetSourceColumn(LLVMRemarkDebugLocRef)[u32]
RemarkArgGetKey(LLVMRemarkArgRef)[LLVMRemarkStringRef]
RemarkArgGetValue(LLVMRemarkArgRef)[LLVMRemarkStringRef]
RemarkArgGetDebugLoc(LLVMRemarkArgRef)[LLVMRemarkDebugLocRef]
RemarkEntryDispose(LLVMRemarkEntryRef)[]
RemarkEntryGetType(LLVMRemarkEntryRef)[LLVMRemarkType]
RemarkEntryGetPassName(LLVMRemarkEntryRef)[LLVMRemarkStringRef]
RemarkEntryGetRemarkName(LLVMRemarkEntryRef)[LLVMRemarkStringRef]
RemarkEntryGetFunctionName(LLVMRemarkEntryRef)[LLVMRemarkStringRef]
RemarkEntryGetDebugLoc(LLVMRemarkEntryRef)[LLVMRemarkDebugLocRef]
RemarkEntryGetHotness(LLVMRemarkEntryRef)[u64]
RemarkEntryGetNumArgs(LLVMRemarkEntryRef)[u32]
RemarkEntryGetFirstArg(LLVMRemarkEntryRef)[LLVMRemarkArgRef]
RemarkEntryGetNextArg(LLVMRemarkArgRef)(LLVMRemarkEntryRef)[LLVMRemarkArgRef]
RemarkParserCreateYAML(*const ::libc::c_void)(u64)[LLVMRemarkParserRef]
RemarkParserCreateBitstream(*const ::libc::c_void)(u64)[LLVMRemarkParserRef]
RemarkParserGetNext(LLVMRemarkParserRef)[LLVMRemarkEntryRef]
RemarkParserHasError(LLVMRemarkParserRef)[LLVMBool]
RemarkParserGetErrorMessage(LLVMRemarkParserRef)[*const i8]
RemarkParserDispose(LLVMRemarkParserRef)[]
RemarkVersion[u32]
GetErrorTypeId(LLVMErrorRef)[LLVMErrorTypeId]
ConsumeError(LLVMErrorRef)[]
GetErrorMessage(LLVMErrorRef)[*mut i8]
DisposeErrorMessage(*mut i8)[]
GetStringErrorTypeId[LLVMErrorTypeId]
CreateStringError(*const i8)[LLVMErrorRef]
CreateDisasm(*const i8)(*mut ::libc::c_void)(::libc::c_int)(LLVMOpInfoCallback)(LLVMSymbolLookupCallback)[LLVMDisasmContextRef]
CreateDisasmCPU(*const i8)(*const i8)(*mut ::libc::c_void)(::libc::c_int)(LLVMOpInfoCallback)(LLVMSymbolLookupCallback)[LLVMDisasmContextRef]
CreateDisasmCPUFeatures(*const i8)(*const i8)(*const i8)(*mut ::libc::c_void)(::libc::c_int)(LLVMOpInfoCallback)(LLVMSymbolLookupCallback)[LLVMDisasmContextRef]
SetDisasmOptions(LLVMDisasmContextRef)(u64)[::libc::c_int]
DisasmDispose(LLVMDisasmContextRef)[]
DisasmInstruction(LLVMDisasmContextRef)(*mut u8)(u64)(u64)(*mut i8)(usize)[usize]
GetOrInsertComdat(LLVMModuleRef)(*const i8)[LLVMComdatRef]
GetComdat(LLVMValueRef)[LLVMComdatRef]
SetComdat(LLVMValueRef)(LLVMComdatRef)[]
GetComdatSelectionKind(LLVMComdatRef)[LLVMComdatSelectionKind]
SetComdatSelectionKind(LLVMComdatRef)(LLVMComdatSelectionKind)[]
LinkModules2(LLVMModuleRef)(LLVMModuleRef)[LLVMBool]
Shutdown[]
CreateMessage(*const i8)[*mut i8]
DisposeMessage(*mut i8)[]
ContextCreate[LLVMContextRef]
GetGlobalContext[LLVMContextRef]
ContextSetDiagnosticHandler(LLVMContextRef)(LLVMDiagnosticHandler)(*mut ::libc::c_void)[]
ContextGetDiagnosticHandler(LLVMContextRef)[LLVMDiagnosticHandler]
ContextGetDiagnosticContext(LLVMContextRef)[*mut ::libc::c_void]
ContextSetYieldCallback(LLVMContextRef)(LLVMYieldCallback)(*mut ::libc::c_void)[]
ContextShouldDiscardValueNames(LLVMContextRef)[LLVMBool]
ContextSetDiscardValueNames(LLVMContextRef)(LLVMBool)[]
ContextDispose(LLVMContextRef)[]
GetDiagInfoDescription(LLVMDiagnosticInfoRef)[*mut i8]
GetDiagInfoSeverity(LLVMDiagnosticInfoRef)[LLVMDiagnosticSeverity]
GetMDKindIDInContext(LLVMContextRef)(*const i8)(u32)[u32]
GetMDKindID(*const i8)(u32)[u32]
GetEnumAttributeKindForName(*const i8)(usize)[u32]
GetLastEnumAttributeKind[u32]
CreateEnumAttribute(LLVMContextRef)(u32)(u64)[LLVMAttributeRef]
GetEnumAttributeKind(LLVMAttributeRef)[u32]
GetEnumAttributeValue(LLVMAttributeRef)[u64]
CreateStringAttribute(LLVMContextRef)(*const i8)(u32)(*const i8)(u32)[LLVMAttributeRef]
GetStringAttributeKind(LLVMAttributeRef)(*mut u32)[*const i8]
GetStringAttributeValue(LLVMAttributeRef)(*mut u32)[*const i8]
IsEnumAttribute(LLVMAttributeRef)[LLVMBool]
IsStringAttribute(LLVMAttributeRef)[LLVMBool]
GetTypeByName2(LLVMContextRef)(*const i8)[LLVMTypeRef]
ModuleCreateWithName(*const i8)[LLVMModuleRef]
ModuleCreateWithNameInContext(*const i8)(LLVMContextRef)[LLVMModuleRef]
CloneModule(LLVMModuleRef)[LLVMModuleRef]
DisposeModule(LLVMModuleRef)[]
GetModuleIdentifier(LLVMModuleRef)(*mut usize)[*const i8]
SetModuleIdentifier(LLVMModuleRef)(*const i8)(usize)[]
GetSourceFileName(LLVMModuleRef)(*mut usize)[*const i8]
SetSourceFileName(LLVMModuleRef)(*const i8)(usize)[]
GetDataLayout(LLVMModuleRef)[*const i8]
GetDataLayoutStr(LLVMModuleRef)[*const i8]
SetDataLayout(LLVMModuleRef)(*const i8)[]
GetTarget(LLVMModuleRef)[*const i8]
SetTarget(LLVMModuleRef)(*const i8)[]
CopyModuleFlagsMetadata(LLVMModuleRef)(*mut usize)[*mut LLVMModuleFlagEntry]
DisposeModuleFlagsMetadata(*mut LLVMModuleFlagEntry)[]
ModuleFlagEntriesGetFlagBehavior(*mut LLVMModuleFlagEntry)(u32)[LLVMModuleFlagBehavior]
ModuleFlagEntriesGetKey(*mut LLVMModuleFlagEntry)(u32)(*mut usize)[*const i8]
ModuleFlagEntriesGetMetadata(*mut LLVMModuleFlagEntry)(u32)[LLVMMetadataRef]
GetModuleFlag(LLVMModuleRef)(*const i8)(usize)[LLVMMetadataRef]
AddModuleFlag(LLVMModuleRef)(LLVMModuleFlagBehavior)(*const i8)(usize)(LLVMMetadataRef)[]
DumpModule(LLVMModuleRef)[]
PrintModuleToFile(LLVMModuleRef)(*const i8)(*mut *mut i8)[LLVMBool]
PrintModuleToString(LLVMModuleRef)[*mut i8]
GetModuleInlineAsm(LLVMModuleRef)(*mut usize)[*const i8]
SetModuleInlineAsm(LLVMModuleRef)(*const i8)[]
SetModuleInlineAsm2(LLVMModuleRef)(*const i8)(usize)[]
AppendModuleInlineAsm(LLVMModuleRef)(*const i8)(usize)[]
GetInlineAsm(LLVMTypeRef)(*mut i8)(usize)(*mut i8)(usize)(LLVMBool)(LLVMBool)(LLVMInlineAsmDialect)[LLVMValueRef]
GetModuleContext(LLVMModuleRef)[LLVMContextRef]
GetTypeByName(LLVMModuleRef)(*const i8)[LLVMTypeRef]
GetFirstNamedMetadata(LLVMModuleRef)[LLVMNamedMDNodeRef]
GetLastNamedMetadata(LLVMModuleRef)[LLVMNamedMDNodeRef]
GetNextNamedMetadata(LLVMNamedMDNodeRef)[LLVMNamedMDNodeRef]
GetPreviousNamedMetadata(LLVMNamedMDNodeRef)[LLVMNamedMDNodeRef]
GetNamedMetadata(LLVMModuleRef)(*const i8)(usize)[LLVMNamedMDNodeRef]
GetOrInsertNamedMetadata(LLVMModuleRef)(*const i8)(usize)[LLVMNamedMDNodeRef]
GetNamedMetadataName(LLVMNamedMDNodeRef)(*const usize)[*const i8]
GetNamedMetadataNumOperands(LLVMModuleRef)(*const i8)[u32]
GetNamedMetadataOperands(LLVMModuleRef)(*const i8)(*mut LLVMValueRef)[]
AddNamedMetadataOperand(LLVMModuleRef)(*const i8)(LLVMValueRef)[]
GetDebugLocDirectory(LLVMValueRef)(*mut u32)[*const i8]
GetDebugLocFilename(LLVMValueRef)(*mut u32)[*const i8]
GetDebugLocLine(LLVMValueRef)[u32]
GetDebugLocColumn(LLVMValueRef)[u32]
AddFunction(LLVMModuleRef)(*const i8)(LLVMTypeRef)[LLVMValueRef]
GetNamedFunction(LLVMModuleRef)(*const i8)[LLVMValueRef]
GetFirstFunction(LLVMModuleRef)[LLVMValueRef]
GetLastFunction(LLVMModuleRef)[LLVMValueRef]
GetNextFunction(LLVMValueRef)[LLVMValueRef]
GetPreviousFunction(LLVMValueRef)[LLVMValueRef]
GetTypeKind(LLVMTypeRef)[LLVMTypeKind]
TypeIsSized(LLVMTypeRef)[LLVMBool]
GetTypeContext(LLVMTypeRef)[LLVMContextRef]
DumpType(LLVMTypeRef)[]
PrintTypeToString(LLVMTypeRef)[*mut i8]
Int1TypeInContext(LLVMContextRef)[LLVMTypeRef]
Int8TypeInContext(LLVMContextRef)[LLVMTypeRef]
Int16TypeInContext(LLVMContextRef)[LLVMTypeRef]
Int32TypeInContext(LLVMContextRef)[LLVMTypeRef]
Int64TypeInContext(LLVMContextRef)[LLVMTypeRef]
Int128TypeInContext(LLVMContextRef)[LLVMTypeRef]
IntTypeInContext(LLVMContextRef)(u32)[LLVMTypeRef]
Int1Type[LLVMTypeRef]
Int8Type[LLVMTypeRef]
Int16Type[LLVMTypeRef]
Int32Type[LLVMTypeRef]
Int64Type[LLVMTypeRef]
Int128Type[LLVMTypeRef]
IntType(u32)[LLVMTypeRef]
GetIntTypeWidth(LLVMTypeRef)[u32]
HalfTypeInContext(LLVMContextRef)[LLVMTypeRef]
BFloatTypeInContext(LLVMContextRef)[LLVMTypeRef]
FloatTypeInContext(LLVMContextRef)[LLVMTypeRef]
DoubleTypeInContext(LLVMContextRef)[LLVMTypeRef]
X86FP80TypeInContext(LLVMContextRef)[LLVMTypeRef]
FP128TypeInContext(LLVMContextRef)[LLVMTypeRef]
PPCFP128TypeInContext(LLVMContextRef)[LLVMTypeRef]
HalfType[LLVMTypeRef]
BFloatType[LLVMTypeRef]
FloatType[LLVMTypeRef]
DoubleType[LLVMTypeRef]
X86FP80Type[LLVMTypeRef]
FP128Type[LLVMTypeRef]
PPCFP128Type[LLVMTypeRef]
FunctionType(LLVMTypeRef)(*mut LLVMTypeRef)(u32)(LLVMBool)[LLVMTypeRef]
IsFunctionVarArg(LLVMTypeRef)[LLVMBool]
GetReturnType(LLVMTypeRef)[LLVMTypeRef]
CountParamTypes(LLVMTypeRef)[u32]
GetParamTypes(LLVMTypeRef)(*mut LLVMTypeRef)[]
StructTypeInContext(LLVMContextRef)(*mut LLVMTypeRef)(u32)(LLVMBool)[LLVMTypeRef]
StructType(*mut LLVMTypeRef)(u32)(LLVMBool)[LLVMTypeRef]
StructCreateNamed(LLVMContextRef)(*const i8)[LLVMTypeRef]
GetStructName(LLVMTypeRef)[*const i8]
StructSetBody(LLVMTypeRef)(*mut LLVMTypeRef)(u32)(LLVMBool)[]
CountStructElementTypes(LLVMTypeRef)[u32]
GetStructElementTypes(LLVMTypeRef)(*mut LLVMTypeRef)[]
StructGetTypeAtIndex(LLVMTypeRef)(u32)[LLVMTypeRef]
IsPackedStruct(LLVMTypeRef)[LLVMBool]
IsOpaqueStruct(LLVMTypeRef)[LLVMBool]
IsLiteralStruct(LLVMTypeRef)[LLVMBool]
GetElementType(LLVMTypeRef)[LLVMTypeRef]
GetSubtypes(LLVMTypeRef)(*mut LLVMTypeRef)[]
GetNumContainedTypes(LLVMTypeRef)[u32]
ArrayType(LLVMTypeRef)(u32)[LLVMTypeRef]
GetArrayLength(LLVMTypeRef)[u32]
PointerType(LLVMTypeRef)(u32)[LLVMTypeRef]
GetPointerAddressSpace(LLVMTypeRef)[u32]
VectorType(LLVMTypeRef)(u32)[LLVMTypeRef]
ScalableVectorType(LLVMTypeRef)(u32)[LLVMTypeRef]
GetVectorSize(LLVMTypeRef)[u32]
VoidTypeInContext(LLVMContextRef)[LLVMTypeRef]
LabelTypeInContext(LLVMContextRef)[LLVMTypeRef]
X86MMXTypeInContext(LLVMContextRef)[LLVMTypeRef]
X86AMXTypeInContext(LLVMContextRef)[LLVMTypeRef]
TokenTypeInContext(LLVMContextRef)[LLVMTypeRef]
MetadataTypeInContext(LLVMContextRef)[LLVMTypeRef]
VoidType[LLVMTypeRef]
LabelType[LLVMTypeRef]
X86MMXType[LLVMTypeRef]
X86AMXType[LLVMTypeRef]
GetValueKind(LLVMValueRef)[LLVMValueKind]
TypeOf(LLVMValueRef)[LLVMTypeRef]
GetValueName(LLVMValueRef)[*const i8]
GetValueName2(LLVMValueRef)(*mut usize)[*const i8]
SetValueName(LLVMValueRef)(*const i8)[]
SetValueName2(LLVMValueRef)(*const i8)(usize)[]
DumpValue(LLVMValueRef)[]
PrintValueToString(LLVMValueRef)[*mut i8]
ReplaceAllUsesWith(LLVMValueRef)(LLVMValueRef)[]
IsConstant(LLVMValueRef)[LLVMBool]
IsUndef(LLVMValueRef)[LLVMBool]
IsPoison(LLVMValueRef)[LLVMBool]
IsAMDNode(LLVMValueRef)[LLVMValueRef]
IsAMDString(LLVMValueRef)[LLVMValueRef]
GetFirstUse(LLVMValueRef)[LLVMUseRef]
GetNextUse(LLVMUseRef)[LLVMUseRef]
GetUser(LLVMUseRef)[LLVMValueRef]
GetUsedValue(LLVMUseRef)[LLVMValueRef]
GetOperand(LLVMValueRef)(u32)[LLVMValueRef]
GetOperandUse(LLVMValueRef)(u32)[LLVMUseRef]
SetOperand(LLVMValueRef)(u32)(LLVMValueRef)[]
GetNumOperands(LLVMValueRef)[::libc::c_int]
ConstNull(LLVMTypeRef)[LLVMValueRef]
ConstAllOnes(LLVMTypeRef)[LLVMValueRef]
GetUndef(LLVMTypeRef)[LLVMValueRef]
GetPoison(LLVMTypeRef)[LLVMValueRef]
IsNull(LLVMValueRef)[LLVMBool]
ConstPointerNull(LLVMTypeRef)[LLVMValueRef]
ConstInt(LLVMTypeRef)(::libc::c_ulonglong)(LLVMBool)[LLVMValueRef]
ConstIntOfArbitraryPrecision(LLVMTypeRef)(u32)(*const u64)[LLVMValueRef]
ConstIntOfString(LLVMTypeRef)(*const i8)(u8)[LLVMValueRef]
ConstIntOfStringAndSize(LLVMTypeRef)(*const i8)(u32)(u8)[LLVMValueRef]
ConstReal(LLVMTypeRef)(::libc::c_double)[LLVMValueRef]
ConstRealOfString(LLVMTypeRef)(*const i8)[LLVMValueRef]
ConstRealOfStringAndSize(LLVMTypeRef)(*const i8)(u32)[LLVMValueRef]
ConstIntGetZExtValue(LLVMValueRef)[::libc::c_ulonglong]
ConstIntGetSExtValue(LLVMValueRef)[::libc::c_longlong]
ConstRealGetDouble(LLVMValueRef)(*mut LLVMBool)[::libc::c_double]
ConstStringInContext(LLVMContextRef)(*const i8)(u32)(LLVMBool)[LLVMValueRef]
ConstString(*const i8)(u32)(LLVMBool)[LLVMValueRef]
IsConstantString(LLVMValueRef)[LLVMBool]
GetAsString(LLVMValueRef)(*mut usize)[*const i8]
ConstStructInContext(LLVMContextRef)(*mut LLVMValueRef)(u32)(LLVMBool)[LLVMValueRef]
ConstStruct(*mut LLVMValueRef)(u32)(LLVMBool)[LLVMValueRef]
ConstArray(LLVMTypeRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
ConstNamedStruct(LLVMTypeRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
GetElementAsConstant(LLVMValueRef)(u32)[LLVMValueRef]
ConstVector(*mut LLVMValueRef)(u32)[LLVMValueRef]
GetConstOpcode(LLVMValueRef)[LLVMOpcode]
AlignOf(LLVMTypeRef)[LLVMValueRef]
SizeOf(LLVMTypeRef)[LLVMValueRef]
ConstNeg(LLVMValueRef)[LLVMValueRef]
ConstNSWNeg(LLVMValueRef)[LLVMValueRef]
ConstNUWNeg(LLVMValueRef)[LLVMValueRef]
ConstFNeg(LLVMValueRef)[LLVMValueRef]
ConstNot(LLVMValueRef)[LLVMValueRef]
ConstAdd(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstNSWAdd(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstNUWAdd(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstFAdd(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstSub(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstNSWSub(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstNUWSub(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstFSub(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstMul(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstNSWMul(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstNUWMul(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstFMul(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstUDiv(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstExactUDiv(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstSDiv(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstExactSDiv(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstFDiv(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstURem(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstSRem(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstFRem(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstAnd(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstOr(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstXor(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstICmp(LLVMIntPredicate)(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstFCmp(LLVMRealPredicate)(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstShl(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstLShr(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstAShr(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstGEP(LLVMValueRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
ConstGEP2(LLVMTypeRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
ConstInBoundsGEP(LLVMValueRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
ConstInBoundsGEP2(LLVMTypeRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
ConstTrunc(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstSExt(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstZExt(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstFPTrunc(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstFPExt(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstUIToFP(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstSIToFP(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstFPToUI(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstFPToSI(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstPtrToInt(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstIntToPtr(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstBitCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstAddrSpaceCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstZExtOrBitCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstSExtOrBitCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstTruncOrBitCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstPointerCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstIntCast(LLVMValueRef)(LLVMTypeRef)(LLVMBool)[LLVMValueRef]
ConstFPCast(LLVMValueRef)(LLVMTypeRef)[LLVMValueRef]
ConstSelect(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstExtractElement(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstInsertElement(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstShuffleVector(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
ConstExtractValue(LLVMValueRef)(*mut u32)(u32)[LLVMValueRef]
ConstInsertValue(LLVMValueRef)(LLVMValueRef)(*mut u32)(u32)[LLVMValueRef]
ConstInlineAsm(LLVMTypeRef)(*const i8)(*const i8)(LLVMBool)(LLVMBool)[LLVMValueRef]
BlockAddress(LLVMValueRef)(LLVMBasicBlockRef)[LLVMValueRef]
GetGlobalParent(LLVMValueRef)[LLVMModuleRef]
IsDeclaration(LLVMValueRef)[LLVMBool]
GetLinkage(LLVMValueRef)[LLVMLinkage]
SetLinkage(LLVMValueRef)(LLVMLinkage)[]
GetSection(LLVMValueRef)[*const i8]
SetSection(LLVMValueRef)(*const i8)[]
GetVisibility(LLVMValueRef)[LLVMVisibility]
SetVisibility(LLVMValueRef)(LLVMVisibility)[]
GetDLLStorageClass(LLVMValueRef)[LLVMDLLStorageClass]
SetDLLStorageClass(LLVMValueRef)(LLVMDLLStorageClass)[]
GetUnnamedAddress(LLVMValueRef)[LLVMUnnamedAddr]
SetUnnamedAddress(LLVMValueRef)(LLVMUnnamedAddr)[]
GlobalGetValueType(LLVMValueRef)[LLVMTypeRef]
HasUnnamedAddr(LLVMValueRef)[LLVMBool]
SetUnnamedAddr(LLVMValueRef)(LLVMBool)[]
GetAlignment(LLVMValueRef)[u32]
SetAlignment(LLVMValueRef)(u32)[]
GlobalSetMetadata(LLVMValueRef)(u32)(LLVMMetadataRef)[]
GlobalEraseMetadata(LLVMValueRef)(u32)[]
GlobalClearMetadata(LLVMValueRef)[]
GlobalCopyAllMetadata(LLVMValueRef)(*mut usize)[*mut LLVMValueMetadataEntry]
DisposeValueMetadataEntries(*mut LLVMValueMetadataEntry)[]
ValueMetadataEntriesGetKind(*mut LLVMValueMetadataEntry)(u32)[u32]
ValueMetadataEntriesGetMetadata(*mut LLVMValueMetadataEntry)(u32)[LLVMMetadataRef]
AddGlobal(LLVMModuleRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
AddGlobalInAddressSpace(LLVMModuleRef)(LLVMTypeRef)(*const i8)(u32)[LLVMValueRef]
GetNamedGlobal(LLVMModuleRef)(*const i8)[LLVMValueRef]
GetFirstGlobal(LLVMModuleRef)[LLVMValueRef]
GetLastGlobal(LLVMModuleRef)[LLVMValueRef]
GetNextGlobal(LLVMValueRef)[LLVMValueRef]
GetPreviousGlobal(LLVMValueRef)[LLVMValueRef]
DeleteGlobal(LLVMValueRef)[]
GetInitializer(LLVMValueRef)[LLVMValueRef]
SetInitializer(LLVMValueRef)(LLVMValueRef)[]
IsThreadLocal(LLVMValueRef)[LLVMBool]
SetThreadLocal(LLVMValueRef)(LLVMBool)[]
IsGlobalConstant(LLVMValueRef)[LLVMBool]
SetGlobalConstant(LLVMValueRef)(LLVMBool)[]
GetThreadLocalMode(LLVMValueRef)[LLVMThreadLocalMode]
SetThreadLocalMode(LLVMValueRef)(LLVMThreadLocalMode)[]
IsExternallyInitialized(LLVMValueRef)[LLVMBool]
SetExternallyInitialized(LLVMValueRef)(LLVMBool)[]
GetNamedGlobalAlias(LLVMModuleRef)(*const i8)(usize)[LLVMValueRef]
GetFirstGlobalAlias(LLVMModuleRef)[LLVMValueRef]
GetLastGlobalAlias(LLVMModuleRef)[LLVMValueRef]
GetNextGlobalAlias(LLVMValueRef)[LLVMValueRef]
GetPreviousGlobalAlias(LLVMValueRef)[LLVMValueRef]
AliasGetAliasee(LLVMValueRef)[LLVMValueRef]
AliasSetAliasee(LLVMValueRef)(LLVMValueRef)[]
AddAlias(LLVMModuleRef)(LLVMTypeRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
DeleteFunction(LLVMValueRef)[]
HasPersonalityFn(LLVMValueRef)[LLVMBool]
GetPersonalityFn(LLVMValueRef)[LLVMValueRef]
SetPersonalityFn(LLVMValueRef)(LLVMValueRef)[]
LookupIntrinsicID(*const i8)(usize)[u32]
GetIntrinsicID(LLVMValueRef)[u32]
GetIntrinsicDeclaration(LLVMModuleRef)(u32)(*mut LLVMTypeRef)(usize)[LLVMValueRef]
IntrinsicGetType(LLVMContextRef)(*mut LLVMTypeRef)(usize)[LLVMTypeRef]
IntrinsicGetName(u32)(*mut usize)[*const i8]
IntrinsicCopyOverloadedName(u32)(*mut LLVMTypeRef)(usize)(*mut usize)[*const i8]
IntrinsicIsOverloaded(u32)[LLVMBool]
GetFunctionCallConv(LLVMValueRef)[u32]
SetFunctionCallConv(LLVMValueRef)(u32)[]
GetGC(LLVMValueRef)[*const i8]
SetGC(LLVMValueRef)(*const i8)[]
AddAttributeAtIndex(LLVMValueRef)(LLVMAttributeIndex)(LLVMAttributeRef)[]
GetAttributeCountAtIndex(LLVMValueRef)(LLVMAttributeIndex)[u32]
GetAttributesAtIndex(LLVMValueRef)(LLVMAttributeIndex)(*mut LLVMAttributeRef)[]
GetEnumAttributeAtIndex(LLVMValueRef)(LLVMAttributeIndex)(u32)[LLVMAttributeRef]
GetStringAttributeAtIndex(LLVMValueRef)(LLVMAttributeIndex)(*const i8)(u32)[LLVMAttributeRef]
RemoveEnumAttributeAtIndex(LLVMValueRef)(LLVMAttributeIndex)(u32)[]
RemoveStringAttributeAtIndex(LLVMValueRef)(LLVMAttributeIndex)(*const i8)(u32)[]
AddTargetDependentFunctionAttr(LLVMValueRef)(*const i8)(*const i8)[]
CountParams(LLVMValueRef)[u32]
GetParams(LLVMValueRef)(*mut LLVMValueRef)[]
GetParam(LLVMValueRef)(u32)[LLVMValueRef]
GetParamParent(LLVMValueRef)[LLVMValueRef]
GetFirstParam(LLVMValueRef)[LLVMValueRef]
GetLastParam(LLVMValueRef)[LLVMValueRef]
GetNextParam(LLVMValueRef)[LLVMValueRef]
GetPreviousParam(LLVMValueRef)[LLVMValueRef]
SetParamAlignment(LLVMValueRef)(u32)[]
MDStringInContext(LLVMContextRef)(*const i8)(u32)[LLVMValueRef]
MDString(*const i8)(u32)[LLVMValueRef]
MDNodeInContext(LLVMContextRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
MDNode(*mut LLVMValueRef)(u32)[LLVMValueRef]
AddGlobalIFunc(LLVMModuleRef)(*const i8)(usize)(LLVMTypeRef)(u32)(LLVMValueRef)[LLVMValueRef]
GetNamedGlobalIFunc(LLVMModuleRef)(*const i8)(usize)[LLVMValueRef]
GetFirstGlobalIFunc(LLVMModuleRef)[LLVMValueRef]
GetLastGlobalIFunc(LLVMModuleRef)[LLVMValueRef]
GetNextGlobalIFunc(LLVMValueRef)[LLVMValueRef]
GetPreviousGlobalIFunc(LLVMValueRef)[LLVMValueRef]
GetGlobalIFuncResolver(LLVMValueRef)[LLVMValueRef]
SetGlobalIFuncResolver(LLVMValueRef)(LLVMValueRef)[]
EraseGlobalIFunc(LLVMValueRef)[]
RemoveGlobalIFunc(LLVMValueRef)[]
MDStringInContext2(LLVMContextRef)(*const i8)(usize)[LLVMMetadataRef]
MDNodeInContext2(LLVMContextRef)(*mut LLVMMetadataRef)(usize)[LLVMMetadataRef]
MetadataAsValue(LLVMContextRef)(LLVMMetadataRef)[LLVMValueRef]
ValueAsMetadata(LLVMValueRef)[LLVMMetadataRef]
GetMDString(LLVMValueRef)(*mut u32)[*const i8]
GetMDNodeNumOperands(LLVMValueRef)[u32]
GetMDNodeOperands(LLVMValueRef)(*mut LLVMValueRef)[]
BasicBlockAsValue(LLVMBasicBlockRef)[LLVMValueRef]
ValueIsBasicBlock(LLVMValueRef)[LLVMBool]
ValueAsBasicBlock(LLVMValueRef)[LLVMBasicBlockRef]
GetBasicBlockName(LLVMBasicBlockRef)[*const i8]
GetBasicBlockParent(LLVMBasicBlockRef)[LLVMValueRef]
GetBasicBlockTerminator(LLVMBasicBlockRef)[LLVMValueRef]
CountBasicBlocks(LLVMValueRef)[u32]
GetBasicBlocks(LLVMValueRef)(*mut LLVMBasicBlockRef)[]
GetFirstBasicBlock(LLVMValueRef)[LLVMBasicBlockRef]
GetLastBasicBlock(LLVMValueRef)[LLVMBasicBlockRef]
GetNextBasicBlock(LLVMBasicBlockRef)[LLVMBasicBlockRef]
GetPreviousBasicBlock(LLVMBasicBlockRef)[LLVMBasicBlockRef]
GetEntryBasicBlock(LLVMValueRef)[LLVMBasicBlockRef]
InsertExistingBasicBlockAfterInsertBlock(LLVMBuilderRef)(LLVMBasicBlockRef)[]
AppendExistingBasicBlock(LLVMValueRef)(LLVMBasicBlockRef)[]
CreateBasicBlockInContext(LLVMContextRef)(*const i8)[LLVMBasicBlockRef]
AppendBasicBlockInContext(LLVMContextRef)(LLVMValueRef)(*const i8)[LLVMBasicBlockRef]
AppendBasicBlock(LLVMValueRef)(*const i8)[LLVMBasicBlockRef]
InsertBasicBlockInContext(LLVMContextRef)(LLVMBasicBlockRef)(*const i8)[LLVMBasicBlockRef]
InsertBasicBlock(LLVMBasicBlockRef)(*const i8)[LLVMBasicBlockRef]
DeleteBasicBlock(LLVMBasicBlockRef)[]
RemoveBasicBlockFromParent(LLVMBasicBlockRef)[]
MoveBasicBlockBefore(LLVMBasicBlockRef)(LLVMBasicBlockRef)[]
MoveBasicBlockAfter(LLVMBasicBlockRef)(LLVMBasicBlockRef)[]
GetFirstInstruction(LLVMBasicBlockRef)[LLVMValueRef]
GetLastInstruction(LLVMBasicBlockRef)[LLVMValueRef]
HasMetadata(LLVMValueRef)[::libc::c_int]
GetMetadata(LLVMValueRef)(u32)[LLVMValueRef]
SetMetadata(LLVMValueRef)(u32)(LLVMValueRef)[]
InstructionGetAllMetadataOtherThanDebugLoc(LLVMValueRef)(*mut usize)[*mut LLVMValueMetadataEntry]
GetInstructionParent(LLVMValueRef)[LLVMBasicBlockRef]
GetNextInstruction(LLVMValueRef)[LLVMValueRef]
GetPreviousInstruction(LLVMValueRef)[LLVMValueRef]
InstructionRemoveFromParent(LLVMValueRef)[]
InstructionEraseFromParent(LLVMValueRef)[]
GetInstructionOpcode(LLVMValueRef)[LLVMOpcode]
GetICmpPredicate(LLVMValueRef)[LLVMIntPredicate]
GetFCmpPredicate(LLVMValueRef)[LLVMRealPredicate]
InstructionClone(LLVMValueRef)[LLVMValueRef]
IsATerminatorInst(LLVMValueRef)[LLVMValueRef]
GetNumArgOperands(LLVMValueRef)[u32]
SetInstructionCallConv(LLVMValueRef)(u32)[]
GetInstructionCallConv(LLVMValueRef)[u32]
SetInstrParamAlignment(LLVMValueRef)(u32)(u32)[]
AddCallSiteAttribute(LLVMValueRef)(LLVMAttributeIndex)(LLVMAttributeRef)[]
GetCallSiteAttributeCount(LLVMValueRef)(LLVMAttributeIndex)[u32]
GetCallSiteAttributes(LLVMValueRef)(LLVMAttributeIndex)(*mut LLVMAttributeRef)[]
GetCallSiteEnumAttribute(LLVMValueRef)(LLVMAttributeIndex)(u32)[LLVMAttributeRef]
GetCallSiteStringAttribute(LLVMValueRef)(LLVMAttributeIndex)(*const i8)(u32)[LLVMAttributeRef]
RemoveCallSiteEnumAttribute(LLVMValueRef)(LLVMAttributeIndex)(u32)[]
RemoveCallSiteStringAttribute(LLVMValueRef)(LLVMAttributeIndex)(*const i8)(u32)[]
GetCalledFunctionType(LLVMValueRef)[LLVMTypeRef]
GetCalledValue(LLVMValueRef)[LLVMValueRef]
IsTailCall(LLVMValueRef)[LLVMBool]
SetTailCall(LLVMValueRef)(LLVMBool)[]
GetNormalDest(LLVMValueRef)[LLVMBasicBlockRef]
GetUnwindDest(LLVMValueRef)[LLVMBasicBlockRef]
SetNormalDest(LLVMValueRef)(LLVMBasicBlockRef)[]
SetUnwindDest(LLVMValueRef)(LLVMBasicBlockRef)[]
GetNumSuccessors(LLVMValueRef)[u32]
GetSuccessor(LLVMValueRef)(u32)[LLVMBasicBlockRef]
SetSuccessor(LLVMValueRef)(u32)(LLVMBasicBlockRef)[]
IsConditional(LLVMValueRef)[LLVMBool]
GetCondition(LLVMValueRef)[LLVMValueRef]
SetCondition(LLVMValueRef)(LLVMValueRef)[]
GetSwitchDefaultDest(LLVMValueRef)[LLVMBasicBlockRef]
GetAllocatedType(LLVMValueRef)[LLVMTypeRef]
IsInBounds(LLVMValueRef)[LLVMBool]
SetIsInBounds(LLVMValueRef)(LLVMBool)[]
AddIncoming(LLVMValueRef)(*mut LLVMValueRef)(*mut LLVMBasicBlockRef)(u32)[]
CountIncoming(LLVMValueRef)[u32]
GetIncomingValue(LLVMValueRef)(u32)[LLVMValueRef]
GetIncomingBlock(LLVMValueRef)(u32)[LLVMBasicBlockRef]
IsAArgument(LLVMValueRef)[LLVMValueRef]
IsABasicBlock(LLVMValueRef)[LLVMValueRef]
IsAInlineAsm(LLVMValueRef)[LLVMValueRef]
IsAUser(LLVMValueRef)[LLVMValueRef]
IsAConstant(LLVMValueRef)[LLVMValueRef]
IsABlockAddress(LLVMValueRef)[LLVMValueRef]
IsAConstantAggregateZero(LLVMValueRef)[LLVMValueRef]
IsAConstantArray(LLVMValueRef)[LLVMValueRef]
IsAConstantDataSequential(LLVMValueRef)[LLVMValueRef]
IsAConstantDataArray(LLVMValueRef)[LLVMValueRef]
IsAConstantDataVector(LLVMValueRef)[LLVMValueRef]
IsAConstantExpr(LLVMValueRef)[LLVMValueRef]
IsAConstantFP(LLVMValueRef)[LLVMValueRef]
IsAConstantInt(LLVMValueRef)[LLVMValueRef]
IsAConstantPointerNull(LLVMValueRef)[LLVMValueRef]
IsAConstantStruct(LLVMValueRef)[LLVMValueRef]
IsAConstantTokenNone(LLVMValueRef)[LLVMValueRef]
IsAConstantVector(LLVMValueRef)[LLVMValueRef]
IsAGlobalValue(LLVMValueRef)[LLVMValueRef]
IsAGlobalAlias(LLVMValueRef)[LLVMValueRef]
IsAGlobalIFunc(LLVMValueRef)[LLVMValueRef]
IsAGlobalObject(LLVMValueRef)[LLVMValueRef]
IsAFunction(LLVMValueRef)[LLVMValueRef]
IsAGlobalVariable(LLVMValueRef)[LLVMValueRef]
IsAUndefValue(LLVMValueRef)[LLVMValueRef]
IsAPoisonValue(LLVMValueRef)[LLVMValueRef]
IsAInstruction(LLVMValueRef)[LLVMValueRef]
IsAUnaryOperator(LLVMValueRef)[LLVMValueRef]
IsABinaryOperator(LLVMValueRef)[LLVMValueRef]
IsACallInst(LLVMValueRef)[LLVMValueRef]
IsAIntrinsicInst(LLVMValueRef)[LLVMValueRef]
IsADbgInfoIntrinsic(LLVMValueRef)[LLVMValueRef]
IsADbgVariableIntrinsic(LLVMValueRef)[LLVMValueRef]
IsADbgDeclareInst(LLVMValueRef)[LLVMValueRef]
IsADbgLabelInst(LLVMValueRef)[LLVMValueRef]
IsAMemIntrinsic(LLVMValueRef)[LLVMValueRef]
IsAMemCpyInst(LLVMValueRef)[LLVMValueRef]
IsAMemMoveInst(LLVMValueRef)[LLVMValueRef]
IsAMemSetInst(LLVMValueRef)[LLVMValueRef]
IsACmpInst(LLVMValueRef)[LLVMValueRef]
IsAFCmpInst(LLVMValueRef)[LLVMValueRef]
IsAICmpInst(LLVMValueRef)[LLVMValueRef]
IsAExtractElementInst(LLVMValueRef)[LLVMValueRef]
IsAGetElementPtrInst(LLVMValueRef)[LLVMValueRef]
IsAInsertElementInst(LLVMValueRef)[LLVMValueRef]
IsAInsertValueInst(LLVMValueRef)[LLVMValueRef]
IsALandingPadInst(LLVMValueRef)[LLVMValueRef]
IsAPHINode(LLVMValueRef)[LLVMValueRef]
IsASelectInst(LLVMValueRef)[LLVMValueRef]
IsAShuffleVectorInst(LLVMValueRef)[LLVMValueRef]
IsAStoreInst(LLVMValueRef)[LLVMValueRef]
IsABranchInst(LLVMValueRef)[LLVMValueRef]
IsAIndirectBrInst(LLVMValueRef)[LLVMValueRef]
IsAInvokeInst(LLVMValueRef)[LLVMValueRef]
IsAReturnInst(LLVMValueRef)[LLVMValueRef]
IsASwitchInst(LLVMValueRef)[LLVMValueRef]
IsAUnreachableInst(LLVMValueRef)[LLVMValueRef]
IsAResumeInst(LLVMValueRef)[LLVMValueRef]
IsACleanupReturnInst(LLVMValueRef)[LLVMValueRef]
IsACatchReturnInst(LLVMValueRef)[LLVMValueRef]
IsACatchSwitchInst(LLVMValueRef)[LLVMValueRef]
IsACallBrInst(LLVMValueRef)[LLVMValueRef]
IsAFuncletPadInst(LLVMValueRef)[LLVMValueRef]
IsACatchPadInst(LLVMValueRef)[LLVMValueRef]
IsACleanupPadInst(LLVMValueRef)[LLVMValueRef]
IsAUnaryInstruction(LLVMValueRef)[LLVMValueRef]
IsAAllocaInst(LLVMValueRef)[LLVMValueRef]
IsACastInst(LLVMValueRef)[LLVMValueRef]
IsAAddrSpaceCastInst(LLVMValueRef)[LLVMValueRef]
IsABitCastInst(LLVMValueRef)[LLVMValueRef]
IsAFPExtInst(LLVMValueRef)[LLVMValueRef]
IsAFPToSIInst(LLVMValueRef)[LLVMValueRef]
IsAFPToUIInst(LLVMValueRef)[LLVMValueRef]
IsAFPTruncInst(LLVMValueRef)[LLVMValueRef]
IsAIntToPtrInst(LLVMValueRef)[LLVMValueRef]
IsAPtrToIntInst(LLVMValueRef)[LLVMValueRef]
IsASExtInst(LLVMValueRef)[LLVMValueRef]
IsASIToFPInst(LLVMValueRef)[LLVMValueRef]
IsATruncInst(LLVMValueRef)[LLVMValueRef]
IsAUIToFPInst(LLVMValueRef)[LLVMValueRef]
IsAZExtInst(LLVMValueRef)[LLVMValueRef]
IsAExtractValueInst(LLVMValueRef)[LLVMValueRef]
IsALoadInst(LLVMValueRef)[LLVMValueRef]
IsAVAArgInst(LLVMValueRef)[LLVMValueRef]
IsAFreezeInst(LLVMValueRef)[LLVMValueRef]
IsAAtomicCmpXchgInst(LLVMValueRef)[LLVMValueRef]
IsAAtomicRMWInst(LLVMValueRef)[LLVMValueRef]
IsAFenceInst(LLVMValueRef)[LLVMValueRef]
GetNumIndices(LLVMValueRef)[u32]
GetIndices(LLVMValueRef)[*const u32]
CreateBuilderInContext(LLVMContextRef)[LLVMBuilderRef]
CreateBuilder[LLVMBuilderRef]
PositionBuilder(LLVMBuilderRef)(LLVMBasicBlockRef)(LLVMValueRef)[]
PositionBuilderBefore(LLVMBuilderRef)(LLVMValueRef)[]
PositionBuilderAtEnd(LLVMBuilderRef)(LLVMBasicBlockRef)[]
GetInsertBlock(LLVMBuilderRef)[LLVMBasicBlockRef]
ClearInsertionPosition(LLVMBuilderRef)[]
InsertIntoBuilder(LLVMBuilderRef)(LLVMValueRef)[]
InsertIntoBuilderWithName(LLVMBuilderRef)(LLVMValueRef)(*const i8)[]
DisposeBuilder(LLVMBuilderRef)[]
GetCurrentDebugLocation2(LLVMBuilderRef)[LLVMMetadataRef]
SetCurrentDebugLocation2(LLVMBuilderRef)(LLVMMetadataRef)[]
SetInstDebugLocation(LLVMBuilderRef)(LLVMValueRef)[]
BuilderGetDefaultFPMathTag(LLVMBuilderRef)[LLVMMetadataRef]
BuilderSetDefaultFPMathTag(LLVMBuilderRef)(LLVMMetadataRef)[]
SetCurrentDebugLocation(LLVMBuilderRef)(LLVMValueRef)[]
GetCurrentDebugLocation(LLVMBuilderRef)[LLVMValueRef]
BuildRetVoid(LLVMBuilderRef)[LLVMValueRef]
BuildRet(LLVMBuilderRef)(LLVMValueRef)[LLVMValueRef]
BuildAggregateRet(LLVMBuilderRef)(*mut LLVMValueRef)(u32)[LLVMValueRef]
BuildBr(LLVMBuilderRef)(LLVMBasicBlockRef)[LLVMValueRef]
BuildCondBr(LLVMBuilderRef)(LLVMValueRef)(LLVMBasicBlockRef)(LLVMBasicBlockRef)[LLVMValueRef]
BuildSwitch(LLVMBuilderRef)(LLVMValueRef)(LLVMBasicBlockRef)(u32)[LLVMValueRef]
BuildIndirectBr(LLVMBuilderRef)(LLVMValueRef)(u32)[LLVMValueRef]
BuildInvoke(LLVMBuilderRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(LLVMBasicBlockRef)(LLVMBasicBlockRef)(*const i8)[LLVMValueRef]
BuildInvoke2(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(LLVMBasicBlockRef)(LLVMBasicBlockRef)(*const i8)[LLVMValueRef]
BuildUnreachable(LLVMBuilderRef)[LLVMValueRef]
BuildResume(LLVMBuilderRef)(LLVMValueRef)[LLVMValueRef]
BuildLandingPad(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildCleanupRet(LLVMBuilderRef)(LLVMValueRef)(LLVMBasicBlockRef)[LLVMValueRef]
BuildCatchRet(LLVMBuilderRef)(LLVMValueRef)(LLVMBasicBlockRef)[LLVMValueRef]
BuildCatchPad(LLVMBuilderRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildCleanupPad(LLVMBuilderRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildCatchSwitch(LLVMBuilderRef)(LLVMValueRef)(LLVMBasicBlockRef)(u32)(*const i8)[LLVMValueRef]
AddCase(LLVMValueRef)(LLVMValueRef)(LLVMBasicBlockRef)[]
AddDestination(LLVMValueRef)(LLVMBasicBlockRef)[]
GetNumClauses(LLVMValueRef)[u32]
GetClause(LLVMValueRef)(u32)[LLVMValueRef]
AddClause(LLVMValueRef)(LLVMValueRef)[]
IsCleanup(LLVMValueRef)[LLVMBool]
SetCleanup(LLVMValueRef)(LLVMBool)[]
AddHandler(LLVMValueRef)(LLVMBasicBlockRef)[]
GetNumHandlers(LLVMValueRef)[u32]
GetHandlers(LLVMValueRef)(*mut LLVMBasicBlockRef)[]
GetArgOperand(LLVMValueRef)(u32)[LLVMValueRef]
SetArgOperand(LLVMValueRef)(u32)(LLVMValueRef)[]
GetParentCatchSwitch(LLVMValueRef)[LLVMValueRef]
SetParentCatchSwitch(LLVMValueRef)(LLVMValueRef)[]
BuildAdd(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNSWAdd(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNUWAdd(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFAdd(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildSub(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNSWSub(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNUWSub(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFSub(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildMul(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNSWMul(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNUWMul(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFMul(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildUDiv(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildExactUDiv(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildSDiv(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildExactSDiv(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFDiv(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildURem(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildSRem(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFRem(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildShl(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildLShr(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildAShr(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildAnd(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildOr(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildXor(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildBinOp(LLVMBuilderRef)(LLVMOpcode)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNeg(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNSWNeg(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNUWNeg(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFNeg(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildNot(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildMalloc(LLVMBuilderRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildArrayMalloc(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildMemSet(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)(u32)[LLVMValueRef]
BuildMemCpy(LLVMBuilderRef)(LLVMValueRef)(u32)(LLVMValueRef)(u32)(LLVMValueRef)[LLVMValueRef]
BuildMemMove(LLVMBuilderRef)(LLVMValueRef)(u32)(LLVMValueRef)(u32)(LLVMValueRef)[LLVMValueRef]
BuildAlloca(LLVMBuilderRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildArrayAlloca(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFree(LLVMBuilderRef)(LLVMValueRef)[LLVMValueRef]
BuildLoad(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildLoad2(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildStore(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)[LLVMValueRef]
BuildGEP(LLVMBuilderRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildInBoundsGEP(LLVMBuilderRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildStructGEP(LLVMBuilderRef)(LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildGEP2(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildInBoundsGEP2(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildStructGEP2(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildGlobalString(LLVMBuilderRef)(*const i8)(*const i8)[LLVMValueRef]
BuildGlobalStringPtr(LLVMBuilderRef)(*const i8)(*const i8)[LLVMValueRef]
GetVolatile(LLVMValueRef)[LLVMBool]
SetVolatile(LLVMValueRef)(LLVMBool)[]
GetWeak(LLVMValueRef)[LLVMBool]
SetWeak(LLVMValueRef)(LLVMBool)[]
GetOrdering(LLVMValueRef)[LLVMAtomicOrdering]
SetOrdering(LLVMValueRef)(LLVMAtomicOrdering)[]
GetAtomicRMWBinOp(LLVMValueRef)[LLVMAtomicRMWBinOp]
SetAtomicRMWBinOp(LLVMValueRef)(LLVMAtomicRMWBinOp)[]
BuildTrunc(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildZExt(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildSExt(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildFPToUI(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildFPToSI(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildUIToFP(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildSIToFP(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildFPTrunc(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildFPExt(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildPtrToInt(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildIntToPtr(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildBitCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildAddrSpaceCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildZExtOrBitCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildSExtOrBitCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildTruncOrBitCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildCast(LLVMBuilderRef)(LLVMOpcode)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildPointerCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildIntCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildIntCast2(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(LLVMBool)(*const i8)[LLVMValueRef]
BuildFPCast(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildICmp(LLVMBuilderRef)(LLVMIntPredicate)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFCmp(LLVMBuilderRef)(LLVMRealPredicate)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildPhi(LLVMBuilderRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildCall(LLVMBuilderRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildCall2(LLVMBuilderRef)(LLVMTypeRef)(LLVMValueRef)(*mut LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildSelect(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildVAArg(LLVMBuilderRef)(LLVMValueRef)(LLVMTypeRef)(*const i8)[LLVMValueRef]
BuildExtractElement(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildInsertElement(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildShuffleVector(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildExtractValue(LLVMBuilderRef)(LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildInsertValue(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(u32)(*const i8)[LLVMValueRef]
BuildFreeze(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildIsNull(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildIsNotNull(LLVMBuilderRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildPtrDiff(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(*const i8)[LLVMValueRef]
BuildFence(LLVMBuilderRef)(LLVMAtomicOrdering)(LLVMBool)(*const i8)[LLVMValueRef]
BuildAtomicRMW(LLVMBuilderRef)(LLVMAtomicRMWBinOp)(LLVMValueRef)(LLVMValueRef)(LLVMAtomicOrdering)(LLVMBool)[LLVMValueRef]
BuildAtomicCmpXchg(LLVMBuilderRef)(LLVMValueRef)(LLVMValueRef)(LLVMValueRef)(LLVMAtomicOrdering)(LLVMAtomicOrdering)(LLVMBool)[LLVMValueRef]
GetNumMaskElements(LLVMValueRef)[u32]
GetUndefMaskElem[::libc::c_int]
GetMaskValue(LLVMValueRef)(u32)[::libc::c_int]
IsAtomicSingleThread(LLVMValueRef)[LLVMBool]
SetAtomicSingleThread(LLVMValueRef)(LLVMBool)[]
GetCmpXchgSuccessOrdering(LLVMValueRef)[LLVMAtomicOrdering]
SetCmpXchgSuccessOrdering(LLVMValueRef)(LLVMAtomicOrdering)[]
GetCmpXchgFailureOrdering(LLVMValueRef)[LLVMAtomicOrdering]
SetCmpXchgFailureOrdering(LLVMValueRef)(LLVMAtomicOrdering)[]
CreateModuleProviderForExistingModule(LLVMModuleRef)[LLVMModuleProviderRef]
DisposeModuleProvider(LLVMModuleProviderRef)[]
CreateMemoryBufferWithContentsOfFile(*const i8)(*mut LLVMMemoryBufferRef)(*mut *mut i8)[LLVMBool]
CreateMemoryBufferWithSTDIN(*mut LLVMMemoryBufferRef)(*mut *mut i8)[LLVMBool]
CreateMemoryBufferWithMemoryRange(*const i8)(usize)(*const i8)(LLVMBool)[LLVMMemoryBufferRef]
CreateMemoryBufferWithMemoryRangeCopy(*const i8)(usize)(*const i8)[LLVMMemoryBufferRef]
GetBufferStart(LLVMMemoryBufferRef)[*const i8]
GetBufferSize(LLVMMemoryBufferRef)[usize]
DisposeMemoryBuffer(LLVMMemoryBufferRef)[]
GetGlobalPassRegistry[LLVMPassRegistryRef]
CreatePassManager[LLVMPassManagerRef]
CreateFunctionPassManagerForModule(LLVMModuleRef)[LLVMPassManagerRef]
CreateFunctionPassManager(LLVMModuleProviderRef)[LLVMPassManagerRef]
RunPassManager(LLVMPassManagerRef)(LLVMModuleRef)[LLVMBool]
InitializeFunctionPassManager(LLVMPassManagerRef)[LLVMBool]
RunFunctionPassManager(LLVMPassManagerRef)(LLVMValueRef)[LLVMBool]
FinalizeFunctionPassManager(LLVMPassManagerRef)[LLVMBool]
DisposePassManager(LLVMPassManagerRef)[]
StartMultithreaded[LLVMBool]
StopMultithreaded[]
IsMultithreaded[LLVMBool]
CreateBinary(LLVMMemoryBufferRef)(LLVMContextRef)(*mut *mut i8)[LLVMBinaryRef]
DisposeBinary(LLVMBinaryRef)[]
BinaryCopyMemoryBuffer(LLVMBinaryRef)[LLVMMemoryBufferRef]
BinaryGetType(LLVMBinaryRef)[LLVMBinaryType]
MachOUniversalBinaryCopyObjectForArch(LLVMBinaryRef)(*const i8)(usize)(*mut *mut i8)[LLVMBinaryRef]
ObjectFileCopySectionIterator(LLVMBinaryRef)[LLVMSectionIteratorRef]
ObjectFileIsSectionIteratorAtEnd(LLVMBinaryRef)(LLVMSectionIteratorRef)[LLVMBool]
ObjectFileCopySymbolIterator(LLVMBinaryRef)[LLVMSymbolIteratorRef]
ObjectFileIsSymbolIteratorAtEnd(LLVMBinaryRef)(LLVMSymbolIteratorRef)[LLVMBool]
DisposeSectionIterator(LLVMSectionIteratorRef)[]
MoveToNextSection(LLVMSectionIteratorRef)[]
MoveToContainingSection(LLVMSectionIteratorRef)(LLVMSymbolIteratorRef)[]
DisposeSymbolIterator(LLVMSymbolIteratorRef)[]
MoveToNextSymbol(LLVMSymbolIteratorRef)[]
GetSectionName(LLVMSectionIteratorRef)[*const i8]
GetSectionSize(LLVMSectionIteratorRef)[u64]
GetSectionContents(LLVMSectionIteratorRef)[*const i8]
GetSectionAddress(LLVMSectionIteratorRef)[u64]
GetSectionContainsSymbol(LLVMSectionIteratorRef)(LLVMSymbolIteratorRef)[LLVMBool]
GetRelocations(LLVMSectionIteratorRef)[LLVMRelocationIteratorRef]
DisposeRelocationIterator(LLVMRelocationIteratorRef)[]
IsRelocationIteratorAtEnd(LLVMSectionIteratorRef)(LLVMRelocationIteratorRef)[LLVMBool]
MoveToNextRelocation(LLVMRelocationIteratorRef)[]
GetSymbolName(LLVMSymbolIteratorRef)[*const i8]
GetSymbolAddress(LLVMSymbolIteratorRef)[u64]
GetSymbolSize(LLVMSymbolIteratorRef)[u64]
GetRelocationOffset(LLVMRelocationIteratorRef)[u64]
GetRelocationSymbol(LLVMRelocationIteratorRef)[LLVMSymbolIteratorRef]
GetRelocationType(LLVMRelocationIteratorRef)[u64]
GetRelocationTypeName(LLVMRelocationIteratorRef)[*const i8]
GetRelocationValueString(LLVMRelocationIteratorRef)[*const i8]
CreateObjectFile(LLVMMemoryBufferRef)[LLVMObjectFileRef]
DisposeObjectFile(LLVMObjectFileRef)[]
GetSections(LLVMObjectFileRef)[LLVMSectionIteratorRef]
IsSectionIteratorAtEnd(LLVMObjectFileRef)(LLVMSectionIteratorRef)[LLVMBool]
GetSymbols(LLVMObjectFileRef)[LLVMSymbolIteratorRef]
IsSymbolIteratorAtEnd(LLVMObjectFileRef)(LLVMSymbolIteratorRef)[LLVMBool]
AddInstructionCombiningPass(LLVMPassManagerRef)[]
AddCoroEarlyPass(LLVMPassManagerRef)[]
AddCoroSplitPass(LLVMPassManagerRef)[]
AddCoroElidePass(LLVMPassManagerRef)[]
AddCoroCleanupPass(LLVMPassManagerRef)[]
PassManagerBuilderAddCoroutinePassesToExtensionPoints(LLVMPassManagerBuilderRef)[]
AddLowerSwitchPass(LLVMPassManagerRef)[]
AddPromoteMemoryToRegisterPass(LLVMPassManagerRef)[]
AddAddDiscriminatorsPass(LLVMPassManagerRef)[]
PassManagerBuilderCreate[LLVMPassManagerBuilderRef]
PassManagerBuilderDispose(LLVMPassManagerBuilderRef)[]
PassManagerBuilderSetOptLevel(LLVMPassManagerBuilderRef)(u32)[]
PassManagerBuilderSetSizeLevel(LLVMPassManagerBuilderRef)(u32)[]
PassManagerBuilderSetDisableUnitAtATime(LLVMPassManagerBuilderRef)(LLVMBool)[]
PassManagerBuilderSetDisableUnrollLoops(LLVMPassManagerBuilderRef)(LLVMBool)[]
PassManagerBuilderSetDisableSimplifyLibCalls(LLVMPassManagerBuilderRef)(LLVMBool)[]
PassManagerBuilderUseInlinerWithThreshold(LLVMPassManagerBuilderRef)(u32)[]
PassManagerBuilderPopulateFunctionPassManager(LLVMPassManagerBuilderRef)(LLVMPassManagerRef)[]
PassManagerBuilderPopulateModulePassManager(LLVMPassManagerBuilderRef)(LLVMPassManagerRef)[]
PassManagerBuilderPopulateLTOPassManager(LLVMPassManagerBuilderRef)(LLVMPassManagerRef)(LLVMBool)(LLVMBool)[]
AddArgumentPromotionPass(LLVMPassManagerRef)[]
AddConstantMergePass(LLVMPassManagerRef)[]
AddMergeFunctionsPass(LLVMPassManagerRef)[]
AddCalledValuePropagationPass(LLVMPassManagerRef)[]
AddDeadArgEliminationPass(LLVMPassManagerRef)[]
AddFunctionAttrsPass(LLVMPassManagerRef)[]
AddFunctionInliningPass(LLVMPassManagerRef)[]
AddAlwaysInlinerPass(LLVMPassManagerRef)[]
AddGlobalDCEPass(LLVMPassManagerRef)[]
AddGlobalOptimizerPass(LLVMPassManagerRef)[]
AddPruneEHPass(LLVMPassManagerRef)[]
AddIPSCCPPass(LLVMPassManagerRef)[]
AddInternalizePass(LLVMPassManagerRef)(u32)[]
AddInternalizePassWithMustPreservePredicate(LLVMPassManagerRef)(*mut ::libc::c_void)(Option<extern "C" fn(LLVMValueRef)(:c_void)[LLVMBool>,)]
AddStripDeadPrototypesPass(LLVMPassManagerRef)[]
AddStripSymbolsPass(LLVMPassManagerRef)[]
AddLoopVectorizePass(LLVMPassManagerRef)[]
AddSLPVectorizePass(LLVMPassManagerRef)[]
AddAggressiveInstCombinerPass(LLVMPassManagerRef)[]
AddAggressiveDCEPass(LLVMPassManagerRef)[]
AddDCEPass(LLVMPassManagerRef)[]
AddBitTrackingDCEPass(LLVMPassManagerRef)[]
AddAlignmentFromAssumptionsPass(LLVMPassManagerRef)[]
AddCFGSimplificationPass(LLVMPassManagerRef)[]
AddDeadStoreEliminationPass(LLVMPassManagerRef)[]
AddScalarizerPass(LLVMPassManagerRef)[]
AddMergedLoadStoreMotionPass(LLVMPassManagerRef)[]
AddGVNPass(LLVMPassManagerRef)[]
AddNewGVNPass(LLVMPassManagerRef)[]
AddIndVarSimplifyPass(LLVMPassManagerRef)[]
AddInstructionCombiningPass(LLVMPassManagerRef)[]
AddInstructionSimplifyPass(LLVMPassManagerRef)[]
AddJumpThreadingPass(LLVMPassManagerRef)[]
AddLICMPass(LLVMPassManagerRef)[]
AddLoopDeletionPass(LLVMPassManagerRef)[]
AddLoopIdiomPass(LLVMPassManagerRef)[]
AddLoopRotatePass(LLVMPassManagerRef)[]
AddLoopRerollPass(LLVMPassManagerRef)[]
AddLoopUnrollPass(LLVMPassManagerRef)[]
AddLoopUnrollAndJamPass(LLVMPassManagerRef)[]
AddLoopUnswitchPass(LLVMPassManagerRef)[]
AddLowerAtomicPass(LLVMPassManagerRef)[]
AddMemCpyOptPass(LLVMPassManagerRef)[]
AddPartiallyInlineLibCallsPass(LLVMPassManagerRef)[]
AddReassociatePass(LLVMPassManagerRef)[]
AddSCCPPass(LLVMPassManagerRef)[]
AddScalarReplAggregatesPass(LLVMPassManagerRef)[]
AddScalarReplAggregatesPassSSA(LLVMPassManagerRef)[]
AddScalarReplAggregatesPassWithThreshold(LLVMPassManagerRef)(::libc::c_int)[]
AddSimplifyLibCallsPass(LLVMPassManagerRef)[]
AddTailCallEliminationPass(LLVMPassManagerRef)[]
AddDemoteMemoryToRegisterPass(LLVMPassManagerRef)[]
AddVerifierPass(LLVMPassManagerRef)[]
AddCorrelatedValuePropagationPass(LLVMPassManagerRef)[]
AddEarlyCSEPass(LLVMPassManagerRef)[]
AddEarlyCSEMemSSAPass(LLVMPassManagerRef)[]
AddLowerExpectIntrinsicPass(LLVMPassManagerRef)[]
AddLowerConstantIntrinsicsPass(LLVMPassManagerRef)[]
AddTypeBasedAliasAnalysisPass(LLVMPassManagerRef)[]
AddScopedNoAliasAAPass(LLVMPassManagerRef)[]
AddBasicAliasAnalysisPass(LLVMPassManagerRef)[]
AddUnifyFunctionExitNodesPass(LLVMPassManagerRef)[]
OrcCreateRTDyldObjectLinkingLayerWithSectionMemoryManager(LLVMOrcExecutionSessionRef)[LLVMOrcObjectLayerRef]
OrcRTDyldObjectLinkingLayerRegisterJITEventListener(LLVMOrcObjectLayerRef)(LLVMJITEventListenerRef)[]
OrcCreateLLJITBuilder[LLVMOrcLLJITBuilderRef]
OrcDisposeLLJITBuilder(LLVMOrcLLJITBuilderRef)[]
OrcLLJITBuilderSetJITTargetMachineBuilder(LLVMOrcLLJITBuilderRef)(LLVMOrcJITTargetMachineBuilderRef)[]
OrcLLJITBuilderSetObjectLinkingLayerCreator(LLVMOrcLLJITBuilderRef)(LLVMOrcLLJITBuilderObjectLinkingLayerCreatorFunction)(*mut ::libc::c_void)[]
OrcCreateLLJIT(*mut LLVMOrcLLJITRef)(LLVMOrcLLJITBuilderRef)[LLVMErrorRef]
OrcDisposeLLJIT(LLVMOrcLLJITRef)[LLVMErrorRef]
OrcLLJITGetExecutionSession(LLVMOrcLLJITRef)[LLVMOrcExecutionSessionRef]
OrcLLJITGetMainJITDylib(LLVMOrcLLJITRef)[LLVMOrcJITDylibRef]
OrcLLJITGetTripleString(LLVMOrcLLJITRef)[*const i8]
OrcLLJITGetGlobalPrefix(LLVMOrcLLJITRef)[i8]
OrcLLJITMangleAndIntern(LLVMOrcLLJITRef)(*const i8)[LLVMOrcSymbolStringPoolEntryRef]
OrcLLJITAddObjectFile(LLVMOrcLLJITRef)(LLVMOrcJITDylibRef)(LLVMMemoryBufferRef)[LLVMErrorRef]
OrcLLJITAddObjectFileWithRT(LLVMOrcLLJITRef)(LLVMOrcResourceTrackerRef)(LLVMMemoryBufferRef)[LLVMErrorRef]
OrcLLJITAddLLVMIRModule(LLVMOrcLLJITRef)(LLVMOrcJITDylibRef)(LLVMOrcThreadSafeModuleRef)[LLVMErrorRef]
OrcLLJITAddLLVMIRModuleWithRT(LLVMOrcLLJITRef)(LLVMOrcResourceTrackerRef)(LLVMOrcThreadSafeModuleRef)[LLVMErrorRef]
OrcLLJITLookup(LLVMOrcLLJITRef)(*mut LLVMOrcJITTargetAddress)(*const i8)[LLVMErrorRef]
OrcExecutionSessionSetErrorReporter(LLVMOrcExecutionSessionRef)(LLVMOrcErrorReporterFunction)(*mut ::libc::c_void)[]
OrcExecutionSessionGetSymbolStringPool(LLVMOrcExecutionSessionRef)[LLVMOrcSymbolStringPoolRef]
OrcSymbolStringPoolClearDeadEntries(LLVMOrcSymbolStringPoolRef)[]
OrcExecutionSessionIntern(LLVMOrcExecutionSessionRef)(*const i8)[LLVMOrcSymbolStringPoolEntryRef]
OrcRetainSymbolStringPoolEntry(LLVMOrcSymbolStringPoolEntryRef)[]
OrcReleaseSymbolStringPoolEntry(LLVMOrcSymbolStringPoolEntryRef)[]
OrcSymbolStringPoolEntryStr(LLVMOrcSymbolStringPoolEntryRef)[*const i8]
OrcReleaseResourceTracker(LLVMOrcResourceTrackerRef)[]
OrcResourceTrackerTransferTo(LLVMOrcResourceTrackerRef)(LLVMOrcResourceTrackerRef)[]
OrcResourceTrackerRemove(LLVMOrcResourceTrackerRef)[LLVMErrorRef]
OrcDisposeDefinitionGenerator(LLVMOrcDefinitionGeneratorRef)[]
OrcDisposeMaterializationUnit(LLVMOrcMaterializationUnitRef)[]
OrcAbsoluteSymbols(LLVMOrcCSymbolMapPairs)(usize)[LLVMOrcMaterializationUnitRef]
OrcExecutionSessionCreateBareJITDylib(LLVMOrcExecutionSessionRef)(*const i8)[LLVMOrcJITDylibRef]
OrcExecutionSessionCreateJITDylib(LLVMOrcExecutionSessionRef)(*mut LLVMOrcJITDylibRef)(*const i8)[LLVMErrorRef]
OrcExecutionSessionGetJITDylibByName(LLVMOrcExecutionSessionRef)(*const i8)[LLVMOrcJITDylibRef]
OrcJITDylibCreateResourceTracker(LLVMOrcJITDylibRef)[LLVMOrcResourceTrackerRef]
OrcJITDylibGetDefaultResourceTracker(LLVMOrcJITDylibRef)[LLVMOrcResourceTrackerRef]
OrcJITDylibDefine(LLVMOrcJITDylibRef)(LLVMOrcMaterializationUnitRef)[LLVMErrorRef]
OrcJITDylibClear(LLVMOrcJITDylibRef)[LLVMErrorRef]
OrcJITDylibAddGenerator(LLVMOrcJITDylibRef)(LLVMOrcDefinitionGeneratorRef)[]
OrcCreateCustomCAPIDefinitionGenerator(LLVMOrcCAPIDefinitionGeneratorTryToGenerateFunction)(*mut ::libc::c_void)[LLVMOrcDefinitionGeneratorRef]
OrcCreateDynamicLibrarySearchGeneratorForProcess(*mut LLVMOrcDefinitionGeneratorRef)(i8)(LLVMOrcSymbolPredicate)(*mut ::libc::c_void)[LLVMErrorRef]
OrcCreateNewThreadSafeContext[LLVMOrcThreadSafeContextRef]
OrcThreadSafeContextGetContext(LLVMOrcThreadSafeContextRef)[LLVMContextRef]
OrcDisposeThreadSafeContext(LLVMOrcThreadSafeContextRef)[]
OrcCreateNewThreadSafeModule(LLVMModuleRef)(LLVMOrcThreadSafeContextRef)[LLVMOrcThreadSafeModuleRef]
OrcDisposeThreadSafeModule(LLVMOrcThreadSafeModuleRef)[]
OrcJITTargetMachineBuilderDetectHost(*mut LLVMOrcJITTargetMachineBuilderRef)[LLVMErrorRef]
OrcJITTargetMachineBuilderCreateFromTargetMachine(LLVMTargetMachineRef)[LLVMOrcJITTargetMachineBuilderRef]
OrcDisposeJITTargetMachineBuilder(LLVMOrcJITTargetMachineBuilderRef)[]
OrcDisposeObjectLayer(LLVMOrcObjectLayerRef)[]
